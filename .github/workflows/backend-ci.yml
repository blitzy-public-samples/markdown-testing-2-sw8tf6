name: Backend CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'src/backend/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'src/backend/**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      NODE_ENV: test
      CI: true
      WORKING_DIRECTORY: src/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: src/backend/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci
        timeout-minutes: 5

      - name: Run linting
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run lint
        timeout-minutes: 3

      - name: Run tests with coverage
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm test
        timeout-minutes: 5
        env:
          CI: true
          NODE_ENV: test
          JEST_JUNIT_OUTPUT_DIR: ./coverage/junit

      - name: Upload test coverage
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ${{ env.WORKING_DIRECTORY }}/coverage
          retention-days: 14

      - name: Build TypeScript
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run build
        timeout-minutes: 5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-extended,security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        timeout-minutes: 10
        with:
          category: "/language:javascript"

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.WORKING_DIRECTORY }}/dist
            ${{ env.WORKING_DIRECTORY }}/.next
            ${{ env.WORKING_DIRECTORY }}/.turbo
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Check for vulnerabilities
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm audit
        continue-on-error: true

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const run_id = context.runId;
            const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
            github.rest.issues.create({
              owner,
              repo,
              title: `ðŸš¨ Backend CI Pipeline Failure`,
              body: `Pipeline failed in ${context.workflow} workflow.\nSee: ${run_url}`
            });