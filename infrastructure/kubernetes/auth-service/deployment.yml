apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: production
  labels:
    app: auth-service
    component: backend
    part-of: task-management
    version: v1
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '3001'
    sidecar.istio.io/inject: 'true'
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: auth-service
      component: backend
  template:
    metadata:
      labels:
        app: auth-service
        component: backend
        part-of: task-management
        version: v1
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3001'
        sidecar.istio.io/inject: 'true'
    spec:
      serviceAccountName: auth-service
      containers:
        - name: auth-service
          image: task-management/auth-service:v1
          imagePullPolicy: Always
          ports:
            - containerPort: 3001
              name: http
              protocol: TCP
            - containerPort: 15014
              name: http-monitoring
              protocol: TCP
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          envFrom:
            - configMapRef:
                name: auth-service-config
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: auth-service
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      restartPolicy: Always