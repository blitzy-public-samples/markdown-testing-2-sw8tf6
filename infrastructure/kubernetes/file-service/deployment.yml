apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-service
  namespace: ${NAMESPACE}
  labels:
    app: file-service
    component: service
    tier: backend
    part-of: task-management-system
    version: 1.0.0
    managed-by: kubectl
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: file-service
      component: service
  template:
    metadata:
      labels:
        app: file-service
        component: service
        tier: backend
        part-of: task-management-system
        version: 1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3003"
        prometheus.io/path: "/metrics"
        checksum/config: ${CONFIG_CHECKSUM}
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: file-service
        image: task-management/file-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3003
          protocol: TCP
          name: http
        - containerPort: 9090
          protocol: TCP
          name: metrics
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        envFrom:
        - configMapRef:
            name: file-service-config
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - file-service
              topologyKey: kubernetes.io/hostname
      volumes:
      - name: tmp
        emptyDir: {}
      - name: config
        configMap:
          name: file-service-config