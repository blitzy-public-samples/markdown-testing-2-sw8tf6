apiVersion: v1
kind: PersistentVolume

---
# PostgreSQL Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  labels:
    app: postgres
    type: database
    environment: production
  annotations:
    backup.kubernetes.io/strategy: "daily"
    encryption.kubernetes.io/enabled: "true"
    kubernetes.io/description: "Persistent volume for PostgreSQL database in task management system"
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ebs-sc
  awsElasticBlockStore:
    fsType: ext4
    volumeID: vol-postgres-xxxxx
    encrypted: true

---
# Redis Cache Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
  labels:
    app: redis
    type: cache
    environment: production
  annotations:
    backup.kubernetes.io/strategy: "snapshot"
    encryption.kubernetes.io/enabled: "true"
    kubernetes.io/description: "Persistent volume for Redis cache in task management system"
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ebs-sc
  awsElasticBlockStore:
    fsType: ext4
    volumeID: vol-redis-xxxxx
    encrypted: true

---
# File Storage Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: file-storage-pv
  labels:
    app: storage
    type: files
    environment: production
  annotations:
    backup.kubernetes.io/strategy: "continuous"
    encryption.kubernetes.io/enabled: "true"
    kubernetes.io/description: "Persistent volume for file storage service in task management system"
spec:
  capacity:
    storage: 500Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ebs-sc
  awsElasticBlockStore:
    fsType: ext4
    volumeID: vol-storage-xxxxx
    encrypted: true